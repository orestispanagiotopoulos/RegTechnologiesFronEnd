// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegTechnologies.Contexts;

namespace RegTechnologies.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20220118010519_Sample")]
    partial class Sample
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegTechnologies.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "orestispan",
                            Date = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 1,
                            Text = "Great Movie."
                        },
                        new
                        {
                            Id = 2,
                            Author = "alex",
                            Date = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 1,
                            Text = "Interesting Movie."
                        },
                        new
                        {
                            Id = 3,
                            Author = "john",
                            Date = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 2,
                            Text = "It was not too bad."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Tom",
                            Date = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 2,
                            Text = "Good Movie."
                        },
                        new
                        {
                            Id = 5,
                            Author = "john",
                            Date = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 3,
                            Text = "Didn't like it."
                        },
                        new
                        {
                            Id = 6,
                            Author = "George",
                            Date = new DateTime(2015, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 3,
                            Text = "It was ok."
                        });
                });

            modelBuilder.Entity("RegTechnologies.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 130,
                            Popularity = 9,
                            Rating = 10,
                            Title = "The Shawshank Redemption",
                            Year = 1994
                        },
                        new
                        {
                            Id = 2,
                            Duration = 105,
                            Popularity = 7,
                            Rating = 10,
                            Title = "12 Angry Men",
                            Year = 1957
                        },
                        new
                        {
                            Id = 3,
                            Duration = 156,
                            Popularity = 9,
                            Rating = 8,
                            Title = "Inception",
                            Year = 2010
                        });
                });

            modelBuilder.Entity("RegTechnologies.Entities.Comment", b =>
                {
                    b.HasOne("RegTechnologies.Entities.Movie", "Movie")
                        .WithMany("Comments")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("RegTechnologies.Entities.Movie", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
